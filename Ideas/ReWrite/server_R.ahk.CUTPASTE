

;//Includes
    


return

;//Funcions


WS_OnRead(socket){
    WS_Recv(socket, ClientMessage)
    ;// db("**Server>>WS_OnRead** **START** ",ClientMessage)
    if (SubStr(ClientMessage,1,4) == "NWCD")
    {
        getRegexArgs(ClientMessage,msgType,ver,code)
        OnSend(socket,msgType,ver,code)
        return
    }
    ClientMessage:=RegexReplace(ClientMessage, "\r", "", cnt)
    RegexReplace(ClientMessage, "\n\n", "", cnt)
    loop, %cnt%
        search.="(.+?)\n\n"
    RegexMatch(ClientMessage, search, cmcnt)
    search := ""
    loop % !cnt ? 1 : cnt
    {
        ClientMessage := !(cmcnt%a_index%) ? ClientMessage : cmcnt%a_index%
        ;// mb(ClientMessage)
        getRegexArgs(ClientMessage,arg1,arg2,arg3,arg4,arg5)
        msgType:=arg1,data:=arg2,cmd:=arg3,prm:=arg4
        ;// db("**Server>>WS_OnRead** ",arg1,arg2,arg3,arg4)
        if      (msgType == "NWCN")
        {

            ;// Outputdebug % "**Server>>WS_OnRead>>NWCN** " . client[socket].sock
        }
        else if (msgType == "MESG")
        {
            /*
                arg1 = MESG
                arg2 = Channel
                arg3 = User input
            */
            prm := arg4
            ;// Outputdebug **Server>>WS_OnRead>>MESG** %prm%
        }
        else if (msgType == "COMD")
        {

        }
        else if (msgType == "NWCD")
        {

        }
        OnSend(socket, msgType, data, cmd, prm)
        ;// Outputdebug **Server>>WS_OnRead** **END**
    }
}

OnSend(s, m, d, c = "", p = ""){
    Global code := []
    if      (m == "MESG")
    {

    }
    else if (m == "COMD")
    {
        c := upperCase(c)
        ;// Outputdebug **Server>>OnSend>>COMD** s=%s%, m=%m%, d=%d%, c=%c%, d=%d%
        if (c == "JOIN")
        {

        }
        else if (c == "NKCH")
        {


        }
    }
    else if (m == "NWCD")
    {
        /*
            m = NWCD
            d = Version
            c = Code
        */
        nickName := client[s].getNick()
        nicksCode := c
        tmp := []
        penguin := client.chanKeep(["channelsTheNickIsIn"])
        for a in penguin
            for b, c in penguin[a]
            {
                tmp[b,c] := 1
            }
        joker := client.chanKeep(["channelsTheNickIsIn"])[s]
        for chan, nick in joker
        {
            for soc in penguin
                for c, n in penguin[soc]
                    if (c = chan)
                    {
                        listofnicks := ""
                        for a,b in tmp[chan]
                            listofnicks .= a . " "
                        WS_Send(soc, "NWCD||" . nickName . "||" . d . "¥")
                        sleep 20
                    }
        }
        ;// Outputdebug **Server>>OnSend>>COMD>>NKCH**
    }
    else if (m == "RQCD")
    {
        /*
            d   = Nickname
            c   = version
        */
        nickName := d, v := c
        for sock, cls in client
        {
            if (client[sock].getNick() == nickName)
            {
                code1 := client[sock].codeKeep(["cd"])[sock,v]
                WS_Send(s, "RQCD||" v "||" d . "||" code1 . "¥")
            }
        }
    }
}









/*
^F1::
    joker := client.chanKeep()
    for nick in joker
        for chan in joker[nick]
            if (chan)
                msgbox, %nick%|%chan%
return

^F2::
    joker := client.chanKeep(["channelsTheNickIsIn"])

    for sock in joker{
        msgbox %sock%
        for chan, nick in joker[sock]
            msgbox, %sock%|%chan%|%nick%
    }
return
~*Esc::
*/

